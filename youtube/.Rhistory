#if you don't have the pacman package loaded on your computer, uncomment the next line, install pacman, and load in the required packages
#install.packages('pacman')
#load the required packages:
pacman::p_load(tidyverse,
glue,
data.table,
dplyr,
moments,
tidybayes,
ggplot2,
ggridges,
plyr,
ellipse,
brms,
cowplot,
viridis)
xfun::embed_file('01-intro.Rmd')
xfun::embed_file('vowel_space_area_data.csv')
#if you don't have the pacman package loaded on your computer, uncomment the next line, install pacman, and load in the required packages
#install.packages('pacman')
#load the required packages:
pacman::p_load(tidyverse,
glue,
data.table,
dplyr,
moments,
tidybayes,
ggplot2,
ggridges,
plyr,
ellipse,
brms,
cowplot,
viridis)
d <- read.csv('vowel_space_area_data.csv')
glimpse(d) # see below for an explanation of the different variables
# Articulation_f1 indicates our first formula to model Articulation
Articulation_f1 <- bf(ArticulationS ~ 1)
get_prior(Articulation_f1,
data = d,
family = gaussian)
weakly_informative_priors <- c(
prior(normal(0, 10), class = Intercept),
prior(normal(0, 10), class = sigma))
#I've provided comments on the parameters that were not introduced to you in the lecture,
#so you have an idea of what they do:
Articulation_m1_prior0 <-
brm(
Articulation_f1,
data = d,
family = gaussian,
prior = weakly_informative_priors,
sample_prior = "only", #this term specifies that the model only samples from the
#priors specified.
file = "Articulation_m0_prior0", #this parameter saves the model in your working
#directory to allow you to load the model at a later point.
#refit = "on_change", # this parameter checks whether you fit the model already. If you have and nothing changed since, it just loads the model. If anything (data, formula, priors) changed, the model is refit
iter = 5000, #this iter parameter specifies the total number of iterations of the
#Markov Chain Monte Carlo (MCMC) algorithm. We run prior predictive checks
#with a small number of iterations as we are not interested in the statistical
#results - we simply use these models to plot samples from our specified priors.
warmup = 1000, #this parameter specifies number of warmup iterations. Warmup iterations are used to "learn" the optimal hyper-parameters (settings) to explore the solutions (posterior space) to your problem
cores = 2, # Number of CPU cores to use when executing the chains - 2 should be more than
# enough, but you can increase this if the models are taking too long to run.
chains = 2, # Number of Markov chains (defaults to 4).
backend = "cmdstanr", #feel free to uncomment this and the following line if you have
#installed the “cmdstanr” package - runtime will be a little faster.
threads = threading(2),
control = list(adapt_delta = 0.99, max_treedepth = 20)) #these parameters control the MCMC
#sampler’s behaviour in various ways
#(e.g., step size). You can leave them like this for now.
xfun::embed_file('03-part2.Rmd')
xfun::embed_file('vowel_space_area_data.csv')
d <- read.csv("C:/Users/sarak/OneDrive - Aarhus Universitet/26102021/Cog sci/3_semester/Method_3/youtube/vowel_space_area_data.csv")
View(d)
