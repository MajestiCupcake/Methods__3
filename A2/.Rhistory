control = list(adapt_delta = 0.99, max_treedepth = 20),
stan_model_args=list(stanc_options = list("O1"))
)
cd2p1upd <- update(cd2p1fit)
study.draws <- spread_draws(cd2p1fit, r_Article[Article,], b_Intercept) %>%
mutate(b_Intercept = r_Article + b_Intercept)
Hmisc::describe(pooled.effect.draws)
pooled.effect.draws <- spread_draws(cd1p1fit, b_Intercept) %>%
mutate(Article = "Pooled Effect")
study.draws$Article <- as.integer(study.draws$Article)
pooled.effect.draws <- pooled.effect.draws %>%
rename('Pooled Effect' = 'Article')
forest.data <- bind_rows(study.draws,
pooled.effect.draws) %>%
ungroup() %>%
mutate(Article = str_replace_all(Article, "[.]", " ")) %>%
mutate(Article = reorder(Article, b_Intercept))
forest.data.summary <- group_by(forest.data, Article) %>%
mean_qi(b_Intercept)
ggplot(aes(b_Intercept, Article,
relevel(Article, "Pooled Effect",
after = Inf)
),
data = forest.data) +
# Add vertical lines for pooled effect and CI
geom_vline(xintercept = fixef(cd2p1fit)[1, 1],
color = "grey", size = 1) +
geom_vline(xintercept = fixef(cd1p1fit)[1, 3:4],
color = "grey", linetype = 2) +
geom_vline(xintercept = 0, color = "black",
size = 1) +
# Add densities
geom_density_ridges(fill = "blue",
rel_min_height = 0.01,
col = NA, scale = 1,
alpha = 0.8) +
geom_pointintervalh(data = forest.data.summary,
size = 1) +
# Add text and labels
geom_text(data = mutate_if(forest.data.summary,
is.numeric, round, 2),
aes(label = glue("{b_Intercept} [{.lower}, {.upper}]"),
x = Inf), hjust = "inward") +
labs(x = "Standardized Mean Difference", # summary measure
y = element_blank()) +
theme_minimal()
#Article
ggplot(aes(b_Intercept, Article,
relevel(Article, "Pooled Effect",
after = Inf)
),
data = forest.data) +
# Add vertical lines for pooled effect and CI
geom_vline(xintercept = fixef(cd2p1fit)[1, 1],
color = "grey", size = 1) +
geom_vline(xintercept = fixef(cd1p1fit)[1, 3:4],
color = "grey", linetype = 2) +
geom_vline(xintercept = 0, color = "black",
size = 1) +
# Add densities
geom_density_ridges(fill = "blue",
rel_min_height = 0.01,
col = NA, scale = 1,
alpha = 0.8) +
geom_pointinterval(data = forest.data.summary,
size = 1) +
# Add text and labels
geom_text(data = mutate_if(forest.data.summary,
is.numeric, round, 2),
aes(label = glue("{b_Intercept} [{.lower}, {.upper}]"),
x = Inf), hjust = "inward") +
labs(x = "Standardized Mean Difference", # summary measure
y = element_blank()) +
theme_minimal()
#Article
ggplot(aes(b_Intercept, Article,
relevel(Article, "Pooled Effect",
after = Inf)
),
data = forest.data) +
# Add vertical lines for pooled effect and CI
geom_vline(xintercept = fixef(cd2p1fit)[1, 1],
color = "grey", size = 1) +
geom_vline(xintercept = fixef(cd2p1fit)[1, 3:4],
color = "grey", linetype = 2) +
geom_vline(xintercept = 0, color = "black",
size = 1) +
# Add densities
geom_density_ridges(fill = "blue",
rel_min_height = 0.01,
col = NA, scale = 1,
alpha = 0.8) +
geom_pointinterval(data = forest.data.summary,
size = 1) +
# Add text and labels
geom_text(data = mutate_if(forest.data.summary,
is.numeric, round, 2),
aes(label = glue("{b_Intercept} [{.lower}, {.upper}]"),
x = Inf), hjust = "inward") +
labs(x = "Standardized Mean Difference", # summary measure
y = element_blank()) +
theme_minimal()
#Article
ggplot(aes(b_Intercept, Article,
relevel(Article, "Pooled Effect",
after = Inf)
),
data = forest.data) +
# Add vertical lines for pooled effect and CI
geom_vline(xintercept = fixef(cd2p1fit)[1, 1],
color = "grey", size = 1) +
geom_vline(xintercept = fixef(cd2p1fit)[1, 3:4],
color = "grey", linetype = 2) +
geom_vline(xintercept = 0, color = "black",
size = 1) +
# Add densities
geom_density_ridges(fill = "blue",
rel_min_height = 0.01,
col = NA, scale = 1,
alpha = 0.8) +
geom_pointinterval(data = forest.data.summary,
size = 1,
xmin=.lower,
xmax=.upper) +
# Add text and labels
geom_text(data = mutate_if(forest.data.summary,
is.numeric, round, 2),
aes(label = glue("{b_Intercept} [{.lower}, {.upper}]"),
x = Inf), hjust = "inward") +
labs(x = "Standardized Mean Difference", # summary measure
y = element_blank()) +
theme_minimal()
View(forest.data)
ggplot(aes(b_Intercept, Article,
relevel(Article, "Pooled Effect",
after = Inf)
),
data = forest.data) +
# Add vertical lines for pooled effect and CI
geom_vline(xintercept = fixef(cd2p1fit)[1, 1],
color = "grey", size = 1) +
geom_vline(xintercept = fixef(cd2p1fit)[1, 3:4],
color = "grey", linetype = 2) +
geom_vline(xintercept = 0, color = "black",
size = 1) +
# Add densities
geom_density_ridges(fill = "blue",
rel_min_height = 0.01,
col = NA, scale = 1,
alpha = 0.8) +
geom_pointinterval(data = forest.data.summary,
size = 1,
xmin=-4,
xmax=2,6)
study.draws <- spread_draws(cd1p1fit, r_StudyID[StudyID,], b_Intercept) %>%
mutate(b_Intercept = r_StudyID + b_Intercept)
Hmisc::describe(pooled.effect.draws)
pooled.effect.draws <- spread_draws(cd1p1fit, b_Intercept) %>%
mutate(StudyID = "Pooled Effect")
study.draws$StudyID <- as.integer(study.draws$StudyID)
pooled.effect.draws <- pooled.effect.draws %>%
rename('Pooled Effect' = 'StudyID')
forest.data <- bind_rows(study.draws,
pooled.effect.draws)# %>%
#ungroup() %>%
#mutate(Article = str_replace_all(Article, "[.]", " ")) %>%
#mutate(Article = reorder(Article, b_Intercept))
forest.data.summary <- group_by(forest.data, StudyID) %>%
mean_qi(b_Intercept)
ggplot(aes(b_Intercept, StudyID
#relevel(StudyID,# "Pooled Effect",
#        after = Inf)
),
data = forest.data) +
# Add vertical lines for pooled effect and CI
geom_vline(xintercept = fixef(cd1p1fit)[1, 1],
color = "grey", size = 1) +
geom_vline(xintercept = fixef(cd1p1fit)[1, 3:4],
color = "grey", linetype = 2) +
geom_vline(xintercept = 0, color = "black",
size = 1) +
# Add densities
geom_density_ridges(fill = "blue",
rel_min_height = 0.01,
col = NA, scale = 1,
alpha = 0.8) +
geom_pointintervalh(data = forest.data.summary,
size = 1) +
# Add text and labels
geom_text(data = mutate_if(forest.data.summary,
is.numeric, round, 2),
aes(label = glue("{b_Intercept} [{.lower}, {.upper}]"),
x = Inf), hjust = "inward") +
labs(x = "Standardized Mean Difference", # summary measure
y = element_blank()) +
theme_minimal()
View(forest.data.summary)
#pacman::p_load(forestplot)
forest.data.summary |>
forestplot(labeltext = c(StudyID, b_Intercept),
clip = c(0.1, 2.5),
vertices = TRUE,
xlog = TRUE) |>
fp_add_lines(h_3 = gpar(lty = 2),
h_11 = gpar(lwd = 1, columns = 1:3, col = "#000044")) |>
fp_set_style(box = "royalblue",
line = "darkblue",
summary = "royalblue",
align = "lrrr",
hrz_lines = "#999999")  |>
fp_add_header(study = c("", "Study"),
deaths_steroid = c("Effect size estimate", "Intercept") |>
fp_align_center()
)
mean(forest.data.summary$b_Intercept)
mean(forest.data.summary$.lower)
mean(forest.data.summary$.upper)
#pacman::p_load(forestplot)
forest.data.summary |>
forestplot(labeltext = c(StudyID, b_Intercept),
clip = c(0.1, 2.5),
vertices = TRUE,
xlog = TRUE) |>
fp_add_lines(h_3 = gpar(lty = 2),
h_11 = gpar(lwd = 1, columns = 1:3, col = "#000044")) |>
fp_set_style(box = "royalblue",
line = "darkblue",
summary = "royalblue",
align = "lrrr",
hrz_lines = "#999999")  |>
fp_add_header(study = c("", "Study"),
Estimates = c("Effect size estimate", "Intercept") |>
fp_align_center()
)
ggsave('forestplot.png')
pacman::p_load(meta)
#create forest plot
ggplot(data = forest.data.summary, aes(y=StudyID, x=b_Intercept, xmin=.lower, xmax=.upper)) +
geom_point() +
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=mean(forest.data.summary$b_Intercept), color='black', linetype='dashed', alpha=.5) +
theme_minimal()
ggsave('forestplot.png')
pacman::p_load(meta)
#create forest plot
ggplot(data = forest.data.summary, aes(y=StudyID, x=b_Intercept, xmin=.lower, xmax=.upper)) +
geom_point() +
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
ggsave('forestplot.png')
sim_hm_data <- sim_hm_data+geom_hline(aes(yintercept=0),color="#3FFFB6")
sim_hm_data
sim_hm_data <-
ggplot(d, aes(Study, EffectSize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
sim_hm_data <- sim_hm_data+geom_hline(aes(yintercept=0),color="#3FFFB6")
sim_hm_data
ggplot(d, aes(Study, x=reorder(Effectsize)))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
#sim_hm_data <-
ggplot(d, aes(Study, x=reorder(d$Effectsize)))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
#sim_hm_data <-
ggplot(d, aes(y=Study, x=reorder(EffectSize)))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
#sim_hm_data <-
ggplot(d, aes(y=Study, x=reorder(EffectSize,-Study)))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
#sim_hm_data <-
ggplot(d, aes(y=Study, x=reorder(Study,-EffectSize)))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
#sim_hm_data <-
ggplot(d, aes(y=Study, x=reorder(-EffectSize)))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
#sim_hm_data <-
ggplot(d, aes(x = reorder(Study, -EffectSize), y = Effectsize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
#sim_hm_data <-
ggplot(d, aes(x = reorder(Study, -EffectSize), y = EffectSize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
sim_hm_data <- sim_hm_data+geom_hline(aes(yintercept=0),color="#3FFFB6")
ggsave('sim.png',sim_hm_data)
sim_hm_data
sim_hm_data <-
ggplot(d, aes(x = reorder(Study, -EffectSize), y = EffectSize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
ggsave('sim.png',sim_hm_data)
sim_hm_data <- sim_hm_data+geom_hline(aes(yintercept=0),color="#3FFFB6")
sim_hm_data
?scale_x_continuous()
sim_hm_data <-
ggplot(d, aes(x = reorder(Study, -EffectSize), y = EffectSize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
scale_x_continuous(name="Study no.",n.breaks=10)+
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
sim_hm_data
sim_hm_data <-
ggplot(d, aes(x = reorder(Study, -EffectSize), y = EffectSize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
scale_x_continuous(name="Study no.",n.breaks=1:10)+
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
sim_hm_data
scale_x_continuous(name="Study no."+
sim_hm_data <-
ggplot(d, aes(x = reorder(Study, -EffectSize), y = EffectSize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
scale_x_continuous(name="Study no.")+
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
sim_hm_data
sim_hm_data <-
ggplot(d, aes(x = reorder(Study, -EffectSize), y = EffectSize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
scale_x_continuous(name="Study no.")+
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
sim_hm_data
sim_hm_data <-
ggplot(d, aes(x = reorder(Study, -EffectSize), y = EffectSize))+
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
theme_minimal() +
xlab("Study no.")+
theme(legend.position = "bottom")+
ggtitle("Simulated Effect Sizes")
sim_hm_data
sim_hm_data <- sim_hm_data+geom_hline(aes(yintercept=0),color="#3FFFB6")
ggsave('sim.png',sim_hm_data,width=7,height=7,units='inch')
ggsave('sim.png',sim_hm_data,width=7,height=7,units='in')
View(d)
pu1p1upd
es1p1upd
View(PitchMean)
n(PitchMean$Article)
count(PitchMean$Article)
length(PitchMEan$Article)
length(PitchMean$Article)
PitchMean_na <- PitchMean[complete.cases(PitchMean), ]
View(PitchMean_na)
variables(PitchMean)
Hmisc::describe(PitchMean_na)
sd(PitchMean_na$SAMPLE_SIZE_HC)
sd(PitchMean_na$SAMPLE_SIZE_SZ)
knitr::opts_chunk$set(echo = TRUE)
setwd('.')
#load packages
pacman::p_load(
brms,
cmdstanr,
dplyr,
ggplot2,
gridExtra,
bayesplot,
rlang,
tidyverse,
rstan,
tidybayes,
grid,
msm,
metafor)
variables(cdp1udp)
Posterior_cd <- as_draws_df(cdp1udp)
cdI <- ggplot(Posterior_cd)+
geom_density(aes(b_Intercept),
fill='yellow',
color='yellow',
alpha=0.3
)+
geom_density(aes(prior_Intercept),
fill='green',
color='green',
alpha=0.3
)+
geom_vline(xintercept=0.4,color="#3FFFB6")+
ggtitle('Intercept')
cdS <- ggplot(Posterior_cd)+
geom_density(aes(prior_sd_StudyID),
fill='yellow',
color='yellow',
alpha=0.3
)+
geom_density(aes(sd_StudyID__Intercept),
fill='green',
color='green',
alpha=0.3
)+
geom_vline(xintercept=0.4,color="#3FFFB6")+
ggtitle('Sigma')
cdplot <- grid.arrange(cdI, cdS, top='Prior-posterior update check for Empirical data')
ggsave('cd_update.png',
cdplot)
?geom_errorbar()
view(post.samples)
View(post.samples)
smd.ecdf <- ecdf(post.samples$smd)
smd.ecdf(0.3)
?ecdf()
?smd.ecdf()
#create forest plot
ggplot(data = forest.data.summary, aes(y=StudyID, x=b_Intercept, xmin=.lower, xmax=.upper)) +
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
library(viridis)
#create forest plot
ggplot(data = forest.data.summary, aes(y=StudyID, x=b_Intercept, xmin=.lower, xmax=.upper)) +
geom_point(aes(color = SampleSize)) +
scale_color_viridis(option = "turbo")+
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
#create forest plot
ggplot(data = forest.data.summary, aes(y=StudyID, x= reorder(b_Intercept,-StudyID), xmin=.lower, xmax=.upper)) +
geom_point() +
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
#create forest plot
ggplot(data = forest.data.summary, aes(y=StudyID, x= reorder(b_Intercept), xmin=.lower, xmax=.upper)) +
geom_point() +
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
#create forest plot
ggplot(data = forest.data.summary, aes(y=b_intercept, x=reorder(StudyID,-b_Intercept), xmin=.lower, xmax=.upper)) +
geom_point() +
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
#create forest plot
ggplot(data = forest.data.summary, aes(y=b_Intercept, x=reorder(StudyID,-b_Intercept), xmin=.lower, xmax=.upper)) +
geom_point() +
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
#create forest plot
ggplot(data = forest.data.summary, aes(y=StudyID, x=b_Intercept, xmin=.lower, xmax=.upper)) +
geom_point() +
geom_errorbar() +
# scale_y_continuous(breaks=1:n(forest.data.summary$StudyID), labels=forest.data.summary$StudyID) +
labs(title='Effect Size by Study', x='Effect Size', y = 'StudyID') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
